C51 COMPILER V9.59.0.0   MAIN                                                              03/31/2019 13:57:34 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\A\Keil_MDK5.25\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <common.h>
   2          #include <lcd1602.h>
   3          #include <ds1302.h>
   4          #include <stdio.h>
   5          
   6          sbit KEY0 = P3^2;
   7          sbit KEY1 = P3^3;
   8          
   9          
  10          u8 i = 0, k;
  11          static u8 count = 0;
  12          static char time_now[7];
  13          static char time_ascii[14];
  14          
  15          //functions prototype:
  16          static void print_time();
  17          void delay_50ms();
  18          
  19          
  20          void main()
  21          {
  22   1        EA = 0;
  23   1        lcd1602_Init(); 
  24   1        
  25   1        /** KEY_Init: Set KEY0 Interrupt **/
  26   1        IT0 = 1;      // Falling edge trigger
  27   1        EX0 = 1;      // Enable EX0 Interrupt line
  28   1        IT1 = 1;
  29   1        EX1 = 0;
  30   1        EA = 1;       // Enable Interrupt
  31   1        /** End setting KEY0 Interrupt **/
  32   1        
  33   1        while(1)
  34   1        {
  35   2          Normal_Running:
  36   2          if(count)
  37   2            goto Set_Time;
  38   2          
  39   2          ds1302_read_time(time_now);
  40   2          print_time();
  41   2        }
  42   1        while(1)
  43   1        {
  44   2          Set_Time:
  45   2          if(!count)
  46   2            goto Normal_Running;
  47   2          while (count) {
  48   3            switch (count) {
  49   4              case 13:
  50   4                k = 12;
  51   4                time_ascii[k] = time_now[k/2] >>4 & 63 | 48;  lcd1602_show_str(2,0, &time_ascii[k], 1); 
  52   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 16;  if((time_now[k/2]>>4) > 9) ti
             -me_now[k/2] &= 15;
  53   4              break;
C51 COMPILER V9.59.0.0   MAIN                                                              03/31/2019 13:57:34 PAGE 2   

  54   4              case 12:
  55   4                k = 12;
  56   4                time_ascii[k] = time_now[k/2] & 63 | 48;  lcd1602_show_str(3,0, &time_ascii[k+1], 1); 
  57   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 1;  if(time_now[k/2] & 15 > 9) tim
             -e_now[k/2] &= 240; // 240 is 1111 0000b
  58   4              break;
  59   4      
  60   4              case 11:
  61   4                k = 8;
  62   4                time_ascii[k] = time_now[k/2] >>4 & 63 | 48;  lcd1602_show_str(5,0, &time_ascii[k], 1); 
  63   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 16;  if((time_now[k/2]>>4) > 1) ti
             -me_now[k/2] &= 15;
  64   4              break;
  65   4              case 10:
  66   4                k = 8;
  67   4                time_ascii[k] = time_now[k/2] & 63 | 48;  lcd1602_show_str(6,0, &time_ascii[k+1], 1); 
  68   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 1;  if(time_now[k/2] & 15 > 9) tim
             -e_now[k/2] &= 240; // 240 is 1111 0000b
  69   4              break;
  70   4      
  71   4              case 9:
  72   4                k = 6;
  73   4                time_ascii[k] = time_now[k/2] >>4 & 63 | 48;  lcd1602_show_str(8,0, &time_ascii[k], 1); 
  74   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 16;  if((time_now[k/2]>>4) > 3) ti
             -me_now[k/2] &= 15;
  75   4              break;
  76   4              case 8:
  77   4                k = 6;
  78   4                time_ascii[k] = time_now[k/2] & 63 | 48;  lcd1602_show_str(9,0, &time_ascii[k+1], 1); 
  79   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 1;  if(time_now[k/2] & 15 > 9) tim
             -e_now[k/2] &= 240; // 240 is 1111 0000b
  80   4              break;
  81   4      
  82   4              case 7:
  83   4                k = 10;
  84   4                time_ascii[k] = time_now[k/2] & 63 | 48;  lcd1602_show_str(11,0, &time_ascii[k+1], 1); 
  85   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 1;  if(time_now[k/2] & 15 > 7) tim
             -e_now[k/2] &= 240; // 240 is 1111 0000b
  86   4              break;
  87   4      
  88   4              case 6:
  89   4                k = 4;
  90   4                time_ascii[k] = time_now[k/2] >>4 & 63 | 48;  lcd1602_show_str(0,1, &time_ascii[k], 1); 
  91   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 16;  if((time_now[k/2]>>4) > 2) ti
             -me_now[k/2] &= 15;
  92   4              break;
  93   4              case 5:
  94   4                k = 4;
  95   4                time_ascii[k] = time_now[k/2] & 63 | 48;  lcd1602_show_str(1,1, &time_ascii[k+1], 1); 
  96   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 1;  if(time_now[k/2] & 15 > 9) tim
             -e_now[k/2] &= 240; // 240 is 1111 0000b
  97   4              break;
  98   4      
  99   4              case 4:
 100   4                k = 2;
 101   4                time_ascii[k] = time_now[k/2] >>4 & 63 | 48;  lcd1602_show_str(3,1, &time_ascii[k], 1); 
 102   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 16;  if((time_now[k/2]>>4) > 6) ti
             -me_now[k/2] &= 15;
 103   4              break;
 104   4              case 3:
 105   4                k = 2;
 106   4                time_ascii[k] = time_now[k/2] & 63 | 48;  lcd1602_show_str(4,1, &time_ascii[k+1], 1); 
C51 COMPILER V9.59.0.0   MAIN                                                              03/31/2019 13:57:34 PAGE 3   

 107   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 1;  if(time_now[k/2] & 15 > 9) tim
             -e_now[k/2] &= 240; // 240 is 1111 0000b
 108   4              break;
 109   4      
 110   4              case 2:
 111   4                k = 0;
 112   4                time_ascii[k] = time_now[k/2] >>4 & 63 | 48;  lcd1602_show_str(6,1, &time_ascii[k], 1); 
 113   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 16;  if((time_now[k/2]>>4) > 6) ti
             -me_now[k/2] &= 15;
 114   4              break;
 115   4              case 1:
 116   4                k = 0;
 117   4                time_ascii[k] = time_now[k/2] & 63 | 48;  lcd1602_show_str(7,1, &time_ascii[k+1], 1); 
 118   4                for(i=11; i > 0; i--)delay_50ms();  if(KEY1 == 0) time_now[k/2] += 1;  if(time_now[k/2] & 15 > 9) tim
             -e_now[k/2] &= 240; // 240 is 1111 0000b
 119   4              break;
 120   4            }
 121   3            ds1302_set_time(time_now);
 122   3          }
 123   2          //time_now[0] = 0x50;
 124   2          //time_now[1] = 0x59;
 125   2          //time_now[2] = 0x23;
 126   2          //time_now[3] = 0x23;
 127   2          //time_now[4] = 0x10;
 128   2          //time_now[5] = 0x01;
 129   2          //time_now[6] = 0x17;
 130   2          //ds1302_set_time(time_now);
 131   2        }
 132   1        
 133   1      }
 134          
 135          
 136          static void print_time()
 137          {
 138   1        u8 j = 7;
 139   1        while(j--)
 140   1        {
 141   2          time_ascii[2*j+1] = time_now[j] & 63 | 48;
 142   2          time_ascii[2*j] = time_now[j] >>4 &63 | 48;
 143   2        }
 144   1      
 145   1        lcd1602_show_str(0,0, "20", 2);
 146   1        lcd1602_show_str(2,0, &time_ascii[12], 2);
 147   1        lcd1602_show_str(4,0, ".", 1);
 148   1        lcd1602_show_str(5,0, &time_ascii[8], 2);
 149   1        lcd1602_show_str(7,0, ".", 1);
 150   1        lcd1602_show_str(8,0, &time_ascii[6], 2);
 151   1          
 152   1        lcd1602_show_str(0,1, &time_ascii[4], 2);
 153   1        lcd1602_show_str(2,1, ":", 1);
 154   1        lcd1602_show_str(3,1, &time_ascii[2], 2);
 155   1        lcd1602_show_str(5,1, ":", 1);
 156   1        lcd1602_show_str(6,1, &time_ascii[0], 2);
 157   1          
 158   1        switch ((time_ascii[11] & 15)) {
 159   2          case 0x1:
 160   2            lcd1602_show_str(11,0, "1 Mon", 5); break;
 161   2          case 0x2:
 162   2            lcd1602_show_str(11,0, "2 Tue", 5); break;
 163   2          case 0x3:
 164   2            lcd1602_show_str(11,0, "3 Wed", 5); break;
 165   2          case 4:
C51 COMPILER V9.59.0.0   MAIN                                                              03/31/2019 13:57:34 PAGE 4   

 166   2            lcd1602_show_str(11,0, "4 Thu", 5); break;
 167   2          case 5:
 168   2            lcd1602_show_str(11,0, "5 Fri", 5); break;
 169   2          case 6:
 170   2            lcd1602_show_str(11,0, "6 Sat", 5); break;
 171   2          case 7:
 172   2            lcd1602_show_str(11,0, "7 Sun", 5); break;
 173   2          default:
 174   2            lcd1602_show_str(11,0, &time_ascii[11], 1); break;
 175   2        }
 176   1      }
 177          
 178          void delay_50ms()
 179          {
 180   1        unsigned char a,b,c;
 181   1          for(c=1;c>0;c--)
 182   1              for(b=38;b>0;b--)
 183   1                  for(a=130;a>0;a--);
 184   1      }
 185          
 186          void KEY_Line() interrupt 0
 187          {
 188   1        u8 i = 0;
 189   1        delay_50ms();
 190   1        if(!count)
 191   1          count = 13;
 192   1        else 
 193   1          count--;
 194   1      
 195   1        for(i=11; i > 0; i--)
 196   1            delay_50ms();
 197   1      }
 198          
 199          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1952    ----
   CONSTANT SIZE    =     49    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
