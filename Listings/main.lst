C51 COMPILER V9.59.0.0   MAIN                                                              04/01/2019 20:31:04 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\A\Keil_MDK5.25\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <common.h>
   2          #include <lcd1602.h>
   3          #include <ds1302.h>
   4          
   5          #define BCD_TO_BIN(val)   ( (((val) >> 4) * 10) +  ((val)&15) )    // Applicable to 8 'bit data length
   6          #define BIN_TO_BCD(val)   ( (((val)/10) << 4) + (((val)%10)) )     // Applicable to 8 'bit data length
   7          
   8          sbit KEY0 = P3^2;
   9          sbit KEY1 = P3^3;
  10          
  11          // Variable definition:
  12          u8 i = 0, xdata tmp;  // temporary 'data
  13          static u8 xdata count = 0;  // running flag for KEY0_Line Interrupt 0
  14          static u8 xdata Enable_12_hour_display = 1;
  15          static char xdata time_now[7];
  16          static char time_ascii[14];
  17          
  18          //functions prototype:
  19          static void print_time();
  20          void check_time();
  21          void update_time_for_set_time(u8 x,u8 y,u8 i,u8 count_copy);
  22          void delay_50ms();
  23          
  24          
  25          void main()
  26          {
  27   1        EA = 0; // Disable Interrupt
  28   1        lcd1602_Init(); 
  29   1        
  30   1        /** KEY_Init: Set KEY0 Interrupt **/
  31   1        IT0 = 1;      // KEY0 Falling edge trigger
  32   1        IT1 = 1;      // KEY1 Falling edge trigger
  33   1        EX0 = 1;      // Enable KEY0 Interrupt line
  34   1        EX1 = 0;
  35   1        EA = 1;       // Enable Interrupt
  36   1        /** End setting KEY0 Interrupt **/
  37   1        
  38   1        while(1)
  39   1        {
  40   2          Normal_Running:
  41   2          if(count)
  42   2            goto Set_Time;
  43   2          
  44   2          ds1302_read_time(time_now);
  45   2          check_time();
  46   2          print_time();
  47   2        }
  48   1        while(1)
  49   1        {
  50   2          Set_Time:
  51   2          if(!count)
  52   2            goto Normal_Running;
  53   2      
  54   2          while (count) {
C51 COMPILER V9.59.0.0   MAIN                                                              04/01/2019 20:31:04 PAGE 2   

  55   3            switch (count) {
  56   4            case 1:
  57   4              tmp = BCD_TO_BIN(time_now[count-1]);
  58   4              if (KEY1 == 0) {
  59   5                tmp++;
  60   5                if (tmp > 59) tmp = 0;  //modify here         1
  61   5                time_now[count-1] = BIN_TO_BCD(tmp);
  62   5              }
  63   4              update_time_for_set_time(6,1,2,count);   // Modify here  2
  64   4              break;
  65   4            case 2:
  66   4              tmp = BCD_TO_BIN(time_now[count-1]);
  67   4              if (KEY1 == 0) {
  68   5                tmp++;
  69   5                if (tmp > 59) tmp = 0;  //modify here         1
  70   5                time_now[count-1] = BIN_TO_BCD(tmp);
  71   5              }
  72   4              update_time_for_set_time(3,1,2,count);   // Modify here  2
  73   4              break;
  74   4            case 3:
  75   4              tmp = BCD_TO_BIN(time_now[count-1]);
  76   4              if (KEY1 == 0) {
  77   5                tmp++;
  78   5                if (tmp > 23) tmp = 0;  //modify here          1
  79   5                time_now[count-1] = BIN_TO_BCD(tmp);
  80   5              }
  81   4              if (Enable_12_hour_display) {
  82   5                if (BCD_TO_BIN(time_now[2]) > 12 ) {
  83   6                  tmp = BIN_TO_BCD(BCD_TO_BIN(time_now[2]) - 12);
  84   6                  lcd1602_show_str(0,1, &tmp, 2);
  85   6                } else
  86   5                {
  87   6                  lcd1602_show_str(0,1, &tmp, 2);
  88   6                }
  89   5              }
  90   4              update_time_for_set_time(0,1,2,count);   // Modify here  2
  91   4              break;
  92   4            case 4:
  93   4              tmp = BCD_TO_BIN(time_now[count-1]);
  94   4              if (KEY1 == 0) {
  95   5                tmp++;
  96   5                if (tmp > 7) tmp = 1; //modify here             1 
  97   5                time_now[count-1] = BIN_TO_BCD(tmp);
  98   5              }
  99   4              // update display'
 100   4              EA = 0; // Disable Interrupt
 101   4              lcd1602_show_str(10,0, "  ", 2);  // modify here (x,y)           2
 102   4              for(i=2; i > 0; i--) delay_50ms();
 103   4              time_ascii[2*count-1] = time_now[count-1] & 63 | 48;    // BCD TO ASCII.
 104   4              time_ascii[2*count-2] = time_now[count-1] >>4 &63 | 48; // BCD TO ASCII.
 105   4              switch ((time_now[3] & 15)) {             //modify here  (x,y)                 3-8
 106   5              case 1:
 107   5                lcd1602_show_str(11,0, "1 Mon", 5); break;
 108   5              case 2:
 109   5                lcd1602_show_str(11,0, "2 Tue", 5); break;
 110   5              case 3:
 111   5                lcd1602_show_str(11,0, "3 Wed", 5); break;
 112   5              case 4:
 113   5                lcd1602_show_str(11,0, "4 Thu", 5); break;
 114   5              case 5:
 115   5                lcd1602_show_str(11,0, "5 Fri", 5); break;
 116   5              case 6:
C51 COMPILER V9.59.0.0   MAIN                                                              04/01/2019 20:31:04 PAGE 3   

 117   5                lcd1602_show_str(11,0, "6 Sat", 5); break;
 118   5              case 7:
 119   5                lcd1602_show_str(11,0, "7 Sun", 5); break;
 120   5              default:
 121   5                lcd1602_show_str(11,0, "error", 5);
 122   5                break;
 123   5              }
 124   4              EA = 1;   //Enable Interrupt
 125   4              for(i=2; i > 0; i--) delay_50ms();
 126   4              break;
 127   4            case 5:
 128   4              tmp = BCD_TO_BIN(time_now[count-1]);
 129   4              if (KEY1 == 0) {
 130   5                tmp++;
 131   5                if (tmp > 31) tmp = 1;  //modify here                 1
 132   5                time_now[count-1] = BIN_TO_BCD(tmp);
 133   5              }
 134   4              update_time_for_set_time(8,0,2,count);   // Modify here  2
 135   4              break;
 136   4            case 6:
 137   4              tmp = BCD_TO_BIN(time_now[count-1]);
 138   4              if (KEY1 == 0) {
 139   5                tmp++;
 140   5                if (tmp > 12) tmp = 1;  //modify here            1
 141   5                time_now[count-1] = BIN_TO_BCD(tmp);
 142   5              }
 143   4              update_time_for_set_time(5,0,2,count);   // Modify here  2
 144   4              break;
 145   4            case 7:
 146   4              tmp = BCD_TO_BIN(time_now[count-1]);
 147   4              if (KEY1 == 0) {
 148   5                tmp++;
 149   5                if (tmp > 99) tmp = 0;     // modify here         1
 150   5                time_now[count-1] = BIN_TO_BCD(tmp);
 151   5              }
 152   4              update_time_for_set_time(2,0,2,count);   // Modify here  2
 153   4              break;
 154   4            case 8:
 155   4              if (KEY1 == 0) Enable_12_hour_display = ~Enable_12_hour_display;
 156   4              if (Enable_12_hour_display) {
 157   5                if (BCD_TO_BIN(time_now[2]) > 12 ) {
 158   6                  lcd1602_show_str(10,1, "pm", 2);
 159   6                } else
 160   5                {
 161   6                  lcd1602_show_str(10,1, "am", 2);
 162   6                }
 163   5              }
 164   4              for(i=5; i > 0; i--) delay_50ms();
 165   4              break;
 166   4            default:
 167   4              lcd1602_show_str(11,0, "error", 5);
 168   4              break;
 169   4            }
 170   3          }
 171   2          ds1302_set_time(time_now);
 172   2        }
 173   1        
 174   1      }
 175          
 176          
 177          void print_time()
 178          {
C51 COMPILER V9.59.0.0   MAIN                                                              04/01/2019 20:31:04 PAGE 4   

 179   1        u8 j = 7, x = 2, y =0;
 180   1        lcd1602_show_str(0,0, "20", 2);
 181   1        while(j--)
 182   1        {
 183   2          // BCD_TO_ASCII
 184   2          time_ascii[2*j+1] = time_now[j] & 63 | 48;
 185   2          time_ascii[2*j] = time_now[j] >>4 &63 | 48;
 186   2      
 187   2          // print: year.mon.date
 188   2          if (j > 3) {
 189   3            lcd1602_show_str(x,y, &time_ascii[2*j], 2);
 190   3            x += 2;
 191   3            if (x > 8) 
 192   3              lcd1602_show_str(x,y, " ", 1);
 193   3            else
 194   3              lcd1602_show_str(x,y, ".", 2);
 195   3            x += 1;
 196   3      
 197   3            
 198   3          }
 199   2      
 200   2          //print: day
 201   2          if (j == 3) {
 202   3            switch ((time_now[j] & 15)) {
 203   4            case 1:
 204   4              lcd1602_show_str(x,y, "1 Mon", 5); break;
 205   4            case 2:
 206   4              lcd1602_show_str(x,y, "2 Tue", 5); break;
 207   4            case 3:
 208   4              lcd1602_show_str(x,y, "3 Wed", 5); break;
 209   4            case 4:
 210   4              lcd1602_show_str(x,y, "4 Thu", 5); break;
 211   4            case 5:
 212   4              lcd1602_show_str(x,y, "5 Fri", 5); break;
 213   4            case 6:
 214   4              lcd1602_show_str(x,y, "6 Sat", 5); break;
 215   4            case 7:
 216   4              lcd1602_show_str(x,y, "7 Sun", 5); break;
 217   4            default:
 218   4              ds1302_set_time_once(j, 1);
 219   4              lcd1602_show_str(x,y, "error", 5);
 220   4              break;
 221   4            }
 222   3            x = 0;
 223   3            y = 1;
 224   3          }
 225   2          
 226   2          // print: hours:min:sec
 227   2          if (j < 3) {
 228   3            lcd1602_show_str(x,y, &time_ascii[2*j], 2);
 229   3            x += 2;
 230   3            if (x < 6)
 231   3              lcd1602_show_str(x,y, ":", 1);
 232   3            x += 1;       
 233   3          }
 234   2          
 235   2          
 236   2        }
 237   1        // lcd1602_print(time_ascii);
 238   1        
 239   1      }
 240          
C51 COMPILER V9.59.0.0   MAIN                                                              04/01/2019 20:31:04 PAGE 5   

 241          
 242          void check_time()
 243          {
 244   1        if (BCD_TO_BIN(time_now[5]) ==  4 | 6 | 8 | 11 && BCD_TO_BIN(time_now[4] > 30)) {
 245   2            time_now[4] = 1;
 246   2            time_now[5] += 1;
 247   2            ds1302_set_time_once(5, time_now[5]);
 248   2            ds1302_set_time_once(4, time_now[4]);
 249   2        }
 250   1        if (BCD_TO_BIN(time_now[5]) == 2 && BCD_TO_BIN(time_now[4] > 28)) {
 251   2          if (! BCD_TO_BIN(time_now[6]) % 4) {
 252   3            time_now[4] = 1;
 253   3            time_now[5] += 1;
 254   3            ds1302_set_time_once(5, time_now[5]);
 255   3            ds1302_set_time_once(4, time_now[4]);
 256   3          }
 257   2        }
 258   1        if (Enable_12_hour_display) {
 259   2          if (BCD_TO_BIN(time_now[2]) > 12 ) {
 260   3            time_now[2] = BIN_TO_BCD(BCD_TO_BIN(time_now[2]) - 12);
 261   3            lcd1602_show_str(10,1, "pm", 2);
 262   3          } else
 263   2          {
 264   3            lcd1602_show_str(10,1, "am", 2);
 265   3          }
 266   2        }
 267   1      }
 268          
 269          
 270          void update_time_for_set_time(u8 x,u8 y,u8 i,u8 count_copy)
 271          {
 272   1        // update display
 273   1        EA = 0; // Disable Interrupt
 274   1        lcd1602_show_str(x,y, "  ", 2);  // modify here (x,y)          2
 275   1        for(; i > 0; i--) delay_50ms();
 276   1        time_ascii[2*count_copy-1] = time_now[count_copy-1] & 63 | 48;    // BCD TO ASCII.
 277   1        time_ascii[2*count_copy-2] = time_now[count_copy-1] >>4 &63 | 48; // BCD TO ASCII.
 278   1        lcd1602_show_str(x,y, &time_ascii[2*count_copy-2], 2); // modify here (x,y)           3
 279   1        EA = 1;   //Enable Interrupt
 280   1        for(; i > 0; i--) delay_50ms();
 281   1      }
 282          
 283          
 284          void delay_50ms()
 285          {
 286   1        unsigned char a,b,c;
 287   1          for(c=1;c>0;c--)
 288   1              for(b=38;b>0;b--)
 289   1                  for(a=130;a>0;a--);
 290   1      }
 291          
 292          void KEY_Line() interrupt 0
 293          {
 294   1        u8 i = 0;
 295   1        delay_50ms(); //  Be adopted to prevent dithering and repeated actions
 296   1        if (KEY0 == 0) {
 297   2          if(!count)
 298   2            count = 7;
 299   2          else 
 300   2            count--;
 301   2      
 302   2          for(i=11; i > 0; i--)
C51 COMPILER V9.59.0.0   MAIN                                                              04/01/2019 20:31:04 PAGE 6   

 303   2            delay_50ms();
 304   2        }
 305   1      }
 306          
 307          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2463    ----
   CONSTANT SIZE    =     66    ----
   XDATA SIZE       =     10    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
