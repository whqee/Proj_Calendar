C51 COMPILER V9.59.0.0   MAIN                                                              03/31/2019 17:48:40 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\A\Keil_MDK5.25\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <common.h>
   2          #include <lcd1602.h>
   3          #include <ds1302.h>
   4          
   5          #define BCD_TO_BIN(val)   ( (((val) >> 4) * 10) +  ((val)&15) )
   6          #define BIN_TO_BCD(val)   ( (((val)/10) << 4) + (((val)%10)) )
   7          
   8          sbit KEY0 = P3^2;
   9          sbit KEY1 = P3^3;
  10          
  11          
  12          u8 i = 0, xdata tmp; 
  13          static u8 xdata count = 0;
  14          static char xdata time_now[7];
  15          static char time_ascii[14];
  16          
  17          //functions prototype:
  18          static void print_time();
  19          void delay_50ms();
  20          
  21          
  22          void main()
  23          {
  24   1        EA = 0;
  25   1        lcd1602_Init(); 
  26   1        
  27   1        /** KEY_Init: Set KEY0 Interrupt **/
  28   1        IT0 = 1;      // KEY0 Falling edge trigger
  29   1        IT1 = 1;      // KEY1 Falling edge trigger
  30   1        EX0 = 1;      // Enable KEY0 Interrupt line
  31   1        EX1 = 0;
  32   1        EA = 1;       // Enable Interrupt
  33   1        /** End setting KEY0 Interrupt **/
  34   1        
  35   1        while(1)
  36   1        {
  37   2          Normal_Running:
  38   2          if(count)
  39   2            goto Set_Time;
  40   2          
  41   2          ds1302_read_time(time_now);
  42   2          print_time();
  43   2        }
  44   1        while(1)
  45   1        {
  46   2          Set_Time:
  47   2          if(!count)
  48   2            goto Normal_Running;
  49   2      
  50   2          while (count) {
  51   3            switch (count) {
  52   4            case 1:
  53   4              tmp = BCD_TO_BIN(time_now[count-1]);
  54   4              if (KEY1 == 0) {
C51 COMPILER V9.59.0.0   MAIN                                                              03/31/2019 17:48:40 PAGE 2   

  55   5                tmp++;
  56   5                if (tmp > 59) tmp = 0;  //modify here         1
  57   5                time_now[count-1] = BIN_TO_BCD(tmp);
  58   5              }
  59   4              // update display
  60   4              EA = 0; // Disable Interrupt
  61   4              lcd1602_show_str(6,1, "  ", 2);  // modify here (x,y)          2
  62   4              for(i=2; i > 0; i--) delay_50ms();
  63   4              time_ascii[2*count-1] = time_now[count-1] & 63 | 48;    // BCD TO ASCII.
  64   4              time_ascii[2*count-2] = time_now[count-1] >>4 &63 | 48; // BCD TO ASCII.
  65   4              lcd1602_show_str(6,1, &time_ascii[2*count-2], 2); // modify here (x,y)         3
  66   4              EA = 1;   //Enable Interrupt
  67   4              for(i=2; i > 0; i--) delay_50ms();
  68   4              break;
  69   4            case 2:
  70   4              tmp = BCD_TO_BIN(time_now[count-1]);
  71   4              if (KEY1 == 0) {
  72   5                tmp++;
  73   5                if (tmp > 59) tmp = 0;  //modify here         1
  74   5                time_now[count-1] = BIN_TO_BCD(tmp);
  75   5              }
  76   4              // update display
  77   4              EA = 0; // Disable Interrupt
  78   4              lcd1602_show_str(3,1, "  ", 2);  // modify here (x,y)           2
  79   4              for(i=2; i > 0; i--) delay_50ms();
  80   4              time_ascii[2*count-1] = time_now[count-1] & 63 | 48;    // BCD TO ASCII.
  81   4              time_ascii[2*count-2] = time_now[count-1] >>4 &63 | 48; // BCD TO ASCII.
  82   4              lcd1602_show_str(3,1, &time_ascii[2*count-2], 2); // modify here (x,y)          3
  83   4              EA = 1;   //Enable Interrupt
  84   4              for(i=2; i > 0; i--) delay_50ms();
  85   4              break;
  86   4            case 3:
  87   4              tmp = BCD_TO_BIN(time_now[count-1]);
  88   4              if (KEY1 == 0) {
  89   5                tmp++;
  90   5                if (tmp > 23) tmp = 0;  //modify here          1
  91   5                time_now[count-1] = BIN_TO_BCD(tmp);
  92   5              }
  93   4              // update display
  94   4              EA = 0; // Disable Interrupt
  95   4              lcd1602_show_str(0,1, "  ", 2);  // modify here (x,y)          2
  96   4              for(i=2; i > 0; i--) delay_50ms();
  97   4              time_ascii[2*count-1] = time_now[count-1] & 63 | 48;    // BCD TO ASCII.
  98   4              time_ascii[2*count-2] = time_now[count-1] >>4 &63 | 48; // BCD TO ASCII.
  99   4              lcd1602_show_str(0,1, &time_ascii[2*count-2], 2); // modify here (x,y)           3
 100   4              EA = 1;   //Enable Interrupt
 101   4              for(i=2; i > 0; i--) delay_50ms();
 102   4              break;
 103   4            case 4:
 104   4              tmp = BCD_TO_BIN(time_now[count-1]);
 105   4              if (KEY1 == 0) {
 106   5                tmp++;
 107   5                if (tmp > 7) tmp = 1; //modify here             1 
 108   5                time_now[count-1] = BIN_TO_BCD(tmp);
 109   5              }
 110   4              // update display
 111   4              EA = 0; // Disable Interrupt
 112   4              lcd1602_show_str(10,0, "  ", 2);  // modify here (x,y)           2
 113   4              for(i=2; i > 0; i--) delay_50ms();
 114   4              time_ascii[2*count-1] = time_now[count-1] & 63 | 48;    // BCD TO ASCII.
 115   4              time_ascii[2*count-2] = time_now[count-1] >>4 &63 | 48; // BCD TO ASCII.
 116   4              switch ((time_now[3] & 15)) {             //modify here  (x,y)                 3-8
C51 COMPILER V9.59.0.0   MAIN                                                              03/31/2019 17:48:40 PAGE 3   

 117   5              case 1:
 118   5                lcd1602_show_str(11,0, "1 Mon", 5); break;
 119   5              case 2:
 120   5                lcd1602_show_str(11,0, "2 Tue", 5); break;
 121   5              case 3:
 122   5                lcd1602_show_str(11,0, "3 Wed", 5); break;
 123   5              case 4:
 124   5                lcd1602_show_str(11,0, "4 Thu", 5); break;
 125   5              case 5:
 126   5                lcd1602_show_str(11,0, "5 Fri", 5); break;
 127   5              case 6:
 128   5                lcd1602_show_str(11,0, "6 Sat", 5); break;
 129   5              case 7:
 130   5                lcd1602_show_str(11,0, "7 Sun", 5); break;
 131   5              default:
 132   5                lcd1602_show_str(11,0, "error", 5);
 133   5                break;
 134   5              }
 135   4              EA = 1;   //Enable Interrupt
 136   4              for(i=2; i > 0; i--) delay_50ms();
 137   4              break;
 138   4            case 5:
 139   4              tmp = BCD_TO_BIN(time_now[count-1]);
 140   4              if (KEY1 == 0) {
 141   5                tmp++;
 142   5                if (tmp > 31) tmp = 1;  //modify here                 1
 143   5                time_now[count-1] = BIN_TO_BCD(tmp);
 144   5              }
 145   4              // update display
 146   4              EA = 0; // Disable Interrupt
 147   4              lcd1602_show_str(8,0, "  ", 2);  // modify here (x,y)             2
 148   4              for(i=2; i > 0; i--) delay_50ms();
 149   4              time_ascii[2*count-1] = time_now[count-1] & 63 | 48;    // BCD TO ASCII.
 150   4              time_ascii[2*count-2] = time_now[count-1] >>4 &63 | 48; // BCD TO ASCII.
 151   4              lcd1602_show_str(8,0, &time_ascii[2*count-2], 2); // modify here (x,y)       3
 152   4              EA = 1;   //Enable Interrupt
 153   4              for(i=2; i > 0; i--) delay_50ms();
 154   4              break;
 155   4            case 6:
 156   4              tmp = BCD_TO_BIN(time_now[count-1]);
 157   4              if (KEY1 == 0) {
 158   5                tmp++;
 159   5                if (tmp > 12) tmp = 1;  //modify here            1
 160   5                time_now[count-1] = BIN_TO_BCD(tmp);
 161   5              }
 162   4              // update display
 163   4              EA = 0; // Disable Interrupt
 164   4              lcd1602_show_str(5,0, "  ", 2);  // modify here (x,y)            2
 165   4              for(i=2; i > 0; i--) delay_50ms();
 166   4              time_ascii[2*count-1] = time_now[count-1] & 63 | 48;    // BCD TO ASCII.
 167   4              time_ascii[2*count-2] = time_now[count-1] >>4 &63 | 48; // BCD TO ASCII.
 168   4              lcd1602_show_str(5,0, &time_ascii[2*count-2], 2); // modify here (x,y)       3
 169   4              EA = 1;   //Enable Interrupt
 170   4              for(i=2; i > 0; i--) delay_50ms();
 171   4              break;
 172   4            case 7:
 173   4              tmp = BCD_TO_BIN(time_now[count-1]);
 174   4              if (KEY1 == 0) {
 175   5                tmp++;
 176   5                if (tmp > 99) tmp = 0;     // modify here         1
 177   5                time_now[count-1] = BIN_TO_BCD(tmp);
 178   5              }
C51 COMPILER V9.59.0.0   MAIN                                                              03/31/2019 17:48:40 PAGE 4   

 179   4              // update display
 180   4              EA = 0; // Disable Interrupt
 181   4              lcd1602_show_str(2,0, "  ", 2); // modify here (x,y)             2
 182   4              for(i=2; i > 0; i--) delay_50ms();
 183   4              time_ascii[2*count-1] = time_now[count-1] & 63 | 48;    // BCD TO ASCII
 184   4              time_ascii[2*count-2] = time_now[count-1] >>4 &63 | 48; // BCD TO ASCII
 185   4              lcd1602_show_str(2,0, &time_ascii[2*count-2], 2); // modify here (x,y)        3
 186   4              EA = 1;   //Enable Interrupt
 187   4              for(i=2; i > 0; i--) delay_50ms();
 188   4              break;
 189   4            default:
 190   4              lcd1602_show_str(11,0, "error", 5);
 191   4              break;
 192   4            }
 193   3          }
 194   2          ds1302_set_time(time_now);
 195   2        }
 196   1        
 197   1      }
 198          
 199          
 200          static void print_time()
 201          {
 202   1        u8 j = 7, x = 2, y =0;
 203   1        lcd1602_show_str(0,0, "20", 2);
 204   1        while(j--)
 205   1        {
 206   2          // BCD_TO_ASCII
 207   2          time_ascii[2*j+1] = time_now[j] & 63 | 48;
 208   2          time_ascii[2*j] = time_now[j] >>4 &63 | 48;
 209   2      
 210   2          // print: year.mon.date
 211   2          if (j > 3) {
 212   3            lcd1602_show_str(x,y, &time_ascii[2*j], 2);
 213   3            x += 2;
 214   3            if (x > 8) 
 215   3              lcd1602_show_str(x,y, " ", 1);
 216   3            else
 217   3              lcd1602_show_str(x,y, ".", 2);
 218   3            x += 1;
 219   3      
 220   3            
 221   3          }
 222   2      
 223   2          //print: day
 224   2          if (j == 3) {
 225   3            switch ((time_now[j] & 15)) {
 226   4            case 1:
 227   4              lcd1602_show_str(x,y, "1 Mon", 5); break;
 228   4            case 2:
 229   4              lcd1602_show_str(x,y, "2 Tue", 5); break;
 230   4            case 3:
 231   4              lcd1602_show_str(x,y, "3 Wed", 5); break;
 232   4            case 4:
 233   4              lcd1602_show_str(x,y, "4 Thu", 5); break;
 234   4            case 5:
 235   4              lcd1602_show_str(x,y, "5 Fri", 5); break;
 236   4            case 6:
 237   4              lcd1602_show_str(x,y, "6 Sat", 5); break;
 238   4            case 7:
 239   4              lcd1602_show_str(x,y, "7 Sun", 5); break;
 240   4            default:
C51 COMPILER V9.59.0.0   MAIN                                                              03/31/2019 17:48:40 PAGE 5   

 241   4              ds1302_set_time_once(j, 1);
 242   4              lcd1602_show_str(x,y, "error", 5);
 243   4              break;
 244   4            }
 245   3            x = 0;
 246   3            y = 1;
 247   3          }
 248   2          
 249   2          // print: hours:min:sec
 250   2          if (j < 3) {
 251   3            lcd1602_show_str(x,y, &time_ascii[2*j], 2);
 252   3            x += 2;
 253   3            if (x < 6)
 254   3              lcd1602_show_str(x,y, ":", 1);
 255   3            x += 1;       
 256   3          }
 257   2          
 258   2          
 259   2        }
 260   1        // lcd1602_print(time_ascii);
 261   1        
 262   1      }
 263          
 264          void delay_50ms()
 265          {
 266   1        unsigned char a,b,c;
 267   1          for(c=1;c>0;c--)
 268   1              for(b=38;b>0;b--)
 269   1                  for(a=130;a>0;a--);
 270   1      }
 271          
 272          void KEY_Line() interrupt 0
 273          {
 274   1        u8 i = 0;
 275   1        delay_50ms();
 276   1        if (KEY0 == 0) {
 277   2          if(!count)
 278   2            count = 7;
 279   2          else 
 280   2            count--;
 281   2      
 282   2          for(i=11; i > 0; i--)
 283   2            delay_50ms();
 284   2        }
 285   1      }
 286          
 287          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2421    ----
   CONSTANT SIZE    =     60    ----
   XDATA SIZE       =      9    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
