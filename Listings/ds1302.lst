C51 COMPILER V9.59.0.0   DS1302                                                            03/31/2019 13:56:50 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\ds1302.obj
COMPILER INVOKED BY: D:\A\Keil_MDK5.25\C51\BIN\C51.EXE ds1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\ds1302.lst) TABS(2) OBJECT(.\Objects\ds1302.obj)

line level    source

   1          #include <ds1302.h>
   2          
   3          sbit SCLK = P1^0;
   4          sbit IO = P1^1;
   5          sbit RST = P1^2;
   6          
   7          
   8          u8 code DS1302_READ_ADDR[7] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d}; //0-7:  s,min,hours,date,month,d
             -ay,year
   9          u8 code DS1302_WRITE_ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};//0-7:  s,min,hours,date,month,d
             -ay,year
  10          
  11          // Internal functionsd definitions:
  12          static u8 ds1302_read_reg(u8 addr);
  13          static void ds1302_write_reg(u8 addr, u8 dat);
  14          
  15          
  16          
  17          
  18          
  19          
  20          /** External Interface definitions starts  **/
  21          
  22          void ds1302_read_time(u8 temp[7])
  23          {
  24   1        u8 i = 7;
  25   1        while(i--)
  26   1          temp[i] = ds1302_read_reg(DS1302_READ_ADDR[i]);
  27   1      }
  28          
  29          
  30          void ds1302_set_time(u8 time[7])
  31          {
  32   1        u8 i = 7;
  33   1        ds1302_write_reg(0x8E,0x00);  //Disable WP and be ready to write
  34   1        while(i--)
  35   1          ds1302_write_reg(DS1302_WRITE_ADDR[i], time[i]);
  36   1        ds1302_write_reg(0x8e, 0x80); //Enable WP to disable write access
  37   1      }
  38          
  39          /** External Interface definitions end  **/
  40          
  41          
  42          
  43          
  44          
  45          
  46          
  47          /** Internal Interface functions below:  **/
  48          
  49          static u8 ds1302_read_reg(u8 addr)
  50          {
  51   1        u8 i = 0, dat = 0, dat1 = 0;
  52   1      
C51 COMPILER V9.59.0.0   DS1302                                                            03/31/2019 13:56:50 PAGE 2   

  53   1        RST = 0;
  54   1        _nop_();
  55   1      
  56   1        SCLK = 0;
  57   1        _nop_();
  58   1      
  59   1        RST = 1;              // Pull-up to get ready to write
  60   1        _nop_();
  61   1      
  62   1        for (i=0; i<8; i++)       // send 8bit addr
  63   1        {
  64   2          IO = addr & 0x01;     // send from LSB
  65   2          addr >>= 1;
  66   2      
  67   2          SCLK = 1;         // Pull-up and ds1302 read 'bit
  68   2          _nop_();
  69   2      
  70   2          SCLK = 0;         // Pull-down for next action
  71   2          _nop_();
  72   2        }
  73   1        
  74   1        for (i=0; i<8; i++)       // read 8bit
  75   1        {
  76   2          dat1 = IO;//read start from LSB
  77   2          dat = (dat>>1) | (dat1<<7);
  78   2          SCLK = 1;
  79   2          _nop_();
  80   2          SCLK = 0;
  81   2          _nop_();
  82   2        }
  83   1      
  84   1        RST = 0;
  85   1        _nop_();  //Below: neccessary to stabilise ds1302
  86   1      
  87   1        SCLK = 1;
  88   1        _nop_();
  89   1      
  90   1        IO = 0;
  91   1        _nop_();
  92   1      
  93   1        IO = 1;
  94   1        _nop_();
  95   1      
  96   1        return dat; 
  97   1      }
  98          
  99          
 100          static void ds1302_write_reg(u8 addr, u8 dat)
 101          {
 102   1        u8 i = 0;
 103   1      
 104   1        RST = 0;
 105   1        _nop_();        
 106   1      
 107   1        SCLK = 0;       
 108   1        _nop_();
 109   1      
 110   1        RST = 1;        
 111   1        _nop_();
 112   1      
 113   1        for (i=0; i<8; i++)   //write addr
 114   1        {
C51 COMPILER V9.59.0.0   DS1302                                                            03/31/2019 13:56:50 PAGE 3   

 115   2          IO = addr & 0x01; 
 116   2          addr >>= 1;     
 117   2          SCLK = 1;     // Inform ds1302 to read 'bit
 118   2          _nop_();      
 119   2      
 120   2          SCLK = 0; 
 121   2          _nop_();
 122   2        }
 123   1      
 124   1        for (i=0; i<8; i++)   // Write dat to 'register
 125   1        {
 126   2          IO = dat & 0x01;
 127   2          dat >>= 1;
 128   2          SCLK = 1; 
 129   2          _nop_();
 130   2          SCLK = 0;
 131   2          _nop_();  
 132   2        }
 133   1           
 134   1        RST = 0;          // Disable write access
 135   1        _nop_();
 136   1      }
 137          
 138          
 139          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    266    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
